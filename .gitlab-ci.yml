stages:
  - build
  - test
  - deploy

# ------------------------ cut-be
build cut-be:
  stage: build
  image: rust:1.49
  script:
    - cd cut-be
    - cargo build --release
  artifacts:
    paths:
      - cut-be/target/release/cut-be

test cut-be:
  stage: test
  image: rust:1.49
  dependencies:
    - "build cut-be"
  script:
    - cd cut-be
    - cargo test

deploy dev cut-be:
  stage: deploy
  image: docker:19.03.12
  needs: ["test cut-be"]
  environment:
    name: development-be
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - cd cut-be
    - docker build -t $CI_REGISTRY_IMAGE:be-dev .
    - docker push $CI_REGISTRY_IMAGE:be-dev
  when: manual
  only:
    - branches
  except:
    - main

deploy prod cut-be:
  stage: deploy
  image: docker:19.03.12
  needs: ["test cut-be"]
  environment:
    name: production-be
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - cd cut-be
    - docker build -t $CI_REGISTRY_IMAGE:be -t $CI_REGISTRY_IMAGE:be-$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:be
    - docker push $CI_REGISTRY_IMAGE:be-$CI_COMMIT_TAG
  when: on_success
  only:
    - tags

# ------------------------ cut-fe
build cut-fe:
  stage: build
  image: node:lts-alpine
  script:
    - cd cut-fe
    - cp $VUE_ENV_FILE ./.env.production
    - yarn install
    - yarn build
  artifacts:
    paths:
      - cut-fe/dist/

deploy dev cut-fe:
  stage: deploy
  image: docker:19.03.12
  needs: ["build cut-fe"]
  environment:
    name: development-fe
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - cd cut-fe
    - cp $VUE_ENV_FILE ./.env.production
    - docker build -t $CI_REGISTRY_IMAGE:fe-dev .
    - docker push $CI_REGISTRY_IMAGE:fe-dev
  when: manual
  only:
    - branches
  except:
    - main

deploy prod cut-fe:
  stage: deploy
  image: docker:19.03.12
  needs: ["build cut-fe"]
  environment:
    name: production-fe
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - docker:19.03.12-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - cd cut-fe
    - cp $VUE_ENV_FILE  ./.env.production
    - docker build -t $CI_REGISTRY_IMAGE:fe -t $CI_REGISTRY_IMAGE:fe-$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:fe
    - docker push $CI_REGISTRY_IMAGE:fe-$CI_COMMIT_TAG
  when: on_success
  only:
    - tags
